创建存储过程P
CREATE PROCEDURE sp_name
([proc_parameter[...]])
(characteristic..) routine_body              //特性   程序体begin end
[IN|OUT|INOUT] para TYPE                     //指定输入输出 名称 数据类型(int,float等) 不限数量

characteristic :
{CONTAIN SQL|NO SQL |READS SQL DATA |MODIFIES SQL DATA}   //包含 不包含 读 写 数据
|SQL SECURITY {DEFINER | INVOKER}

实例 :
DELIMITER //                                          //要把截止符改掉成// delimiter //
CREATE PROCEDURE num_fro_employee 
(IN emp_id INT, OUT num_name VARCHAR(20))             //输入1个参数 输出1个
READS SQL DATA                                        //特性：读数据
  BEGIN                                               //routine_body : begin...end
   SELECT name INTO num_name                          // 把查到的写到 num_name里面
   FROM employee
   WHERE num = emp_id;
  END
//


存储过程调用
CALL num_from _employee(4,@e)                         //输入4 写到变量e里
SELECT @e                                             //查询成功


创建存储函数FUNCTION (只能有输出)

CREATE FUNCTION sp_name                              //定义名字
([func_parameter[...]])                              //函数参数
RETURNS type                                         //定义返回值类型
[characteristic...] routine_body                     //函数体

实例 :
DELIMITER //
CREATE FUNCTION name_from_employee (emp_id)
  RETURNS VARCHAR(20)
  BEGIN 
    RETURN (SELECT name FROM employee WHERE num=emp_id) ;
  END
//
SELECT name_from_employee(4)


变量的使用
1.定义
DECLARE my_x INT DEFAULT 12
2.赋值(2种)
SET my_x = 60;
SELECT d_id INTO my_x FROM employee WHERE num=2;

实例 : (待补)
DELIMITER //
CREATE PROCEDURE ...
CALL ...(2,@result)
SELECT @result



其他
查询权限 information_schema.USER_PRIVILEGES
调用过程 CALL
调用函数 SELECT 
查看
SHOW { PROCEDURE | FUNCTION } STATUS [ LIKE '...' ]
SHOW CREATE
SELECT * FROM information_schame.Routines WHERE ROUTINE_NAME = "..." ;
修改
ALTER { PROCEDURE | FUNCTION } MODIFIES SQL DATA SQL SECURITY INVOKER
删除
DROP PROCEDURE ...


作业
在teacher表上创建名为teacher_info1a和teacher_info1b的存储过程和名为teacher_info2的存储函数。

CREATE TABLE teacher(
id INT(4) PRIMARY KEY UNIQUE NOT NULL AUTO_INCREMENT,
num INT(10) NOT NULL UNIQUE,
name VARCHAR(20) NOT NULL,
sex VARCHAR(4) NOT NULL, 
birthday DATETIME ,
address VARCHAR(50));

INSERT INTO teacher VALUES
(1, 1001, '张三','男' ,'1984-11-08' ,'北京市昌平区'),
(2, 1002, '李四','女' ,'1970-01-21' ,'北京市海淀区'),
(3, 1003, '王五','男' ,'1976-10-30' ,'北京市昌平区'),
(4, 1004, '赵六','男' ,'1980-06-05' ,'北京市顺义区');

（1）存储过程teacher_info1a的要求：
输入参数teacher_id,一个输出参数info，查询出与teacher_id值相等的姓名，由info输出；
DELIMITER //
CREATE PROCEDURE teacher_info1a 
(IN teacher_id INT,OUT info VARCHAR(20))
READS SQL DATA
  BEGIN
    SELECT name INTO info FROM teacher WHERE id = teacher_id;
  END
//

CALL teacher_info1a (3,@q)//
SELECT @q//


（2）存储过程teacher_info1b的要求：
输入参数teacher_id,一个输出参数info，查询出与teacher_id值相等者的年龄，由info输出。
CREATE PROCEDURE teacher_info1b 
(IN teacher_id INT,OUT info DATETIME)
READS SQL DATA
  BEGIN
    SELECT '201800000000'-birthday INTO info FROM teacher WHERE id = teacher_id ;
  END
//
CALL teacher_info1b(1,@q)//
SELECT @q//


（2）分别调用这两个存储过程；查询info的输出结果。
CALL teacher_info1a (3,@q)//
SELECT @q//
CALL teacher_info1b(1,@q)//
SELECT @q//


（3）删除teacher_info1a这个存储过程。
DROP PROCEDURE teacher_info1a//

（4）把存储过程teacher_info1b改为存储函数teacher_info2，并测试。
CREATE FUNCTION teacher_info2(teacher_id)
RETUENS DATETIME
BEGIN








